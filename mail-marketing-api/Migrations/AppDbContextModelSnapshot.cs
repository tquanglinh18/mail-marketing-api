// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mail_marketing_api.Data;

#nullable disable

namespace mail_marketing_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mail_marketing_api.Models.EmailLogs", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"), 1L, 1);

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ErrorMessage");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("RecipientId");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("SentDate");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("TemplateId");

                    b.HasKey("LogId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmailLogs");

                    b.HasData(
                        new
                        {
                            LogId = 1,
                            ErrorMessage = "",
                            IsSuccess = true,
                            RecipientId = 1,
                            SentDate = new DateTime(2025, 5, 22, 9, 0, 0, 0, DateTimeKind.Utc),
                            TemplateId = 1
                        },
                        new
                        {
                            LogId = 2,
                            ErrorMessage = "",
                            IsSuccess = true,
                            RecipientId = 3,
                            SentDate = new DateTime(2025, 5, 23, 10, 0, 0, 0, DateTimeKind.Utc),
                            TemplateId = 2
                        },
                        new
                        {
                            LogId = 3,
                            ErrorMessage = "Email address does not exist.",
                            IsSuccess = false,
                            RecipientId = 4,
                            SentDate = new DateTime(2025, 5, 23, 10, 5, 0, 0, DateTimeKind.Utc),
                            TemplateId = 2
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailRecipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientId"), 1L, 1);

                    b.Property<int>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("BatchId");

                    b.Property<string>("CustomDataJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CustomDataJson");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RecipientEmail");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RecipientName");

                    b.HasKey("RecipientId");

                    b.HasIndex("BatchId");

                    b.ToTable("EmailRecipients");

                    b.HasData(
                        new
                        {
                            RecipientId = 1,
                            BatchId = 1,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Văn Linh\", \"city\": \"Hanoi\" }",
                            RecipientEmail = "linhtq.vtco@gmail.com",
                            RecipientName = "Nguyễn Văn Linh"
                        },
                        new
                        {
                            RecipientId = 2,
                            BatchId = 1,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Thị Linh\", \"city\": \"HCM\" }",
                            RecipientEmail = "tquanglinh18@gmail.com",
                            RecipientName = "Trần Thị Linh"
                        },
                        new
                        {
                            RecipientId = 3,
                            BatchId = 2,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Văn C\", \"company\": \"ABC Corp\" }",
                            RecipientEmail = "levanc@example.com",
                            RecipientName = "Lê Văn C"
                        },
                        new
                        {
                            RecipientId = 4,
                            BatchId = 2,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Thị D\", \"company\": \"XYZ Ltd\" }",
                            RecipientEmail = "phamthid@example.com",
                            RecipientName = "Phạm Thị D"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemplateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HtmlContent");

                    b.Property<string>("ImageStorageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImageStorageType");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TemplateName");

                    b.HasKey("TemplateId");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            TemplateId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2025, 5, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            HtmlContent = "<h1>Chào mừng -TenNguoiNhan-!</h1><p>Cảm ơn bạn đã đăng ký dịch vụ của chúng tôi.</p>",
                            ImageStorageType = "None",
                            TemplateName = "Mẫu Chào Mừng Thành Viên Mới"
                        },
                        new
                        {
                            TemplateId = 2,
                            CreatedBy = "MarketingTeam",
                            CreatedDate = new DateTime(2025, 5, 21, 11, 0, 0, 0, DateTimeKind.Utc),
                            HtmlContent = "<h1>Kính gửi -TenNguoiNhan-,</h1><p>Cảm ơn bạn đã là một thành viên <b>-MembershipLevel-</b> tại thành phố <b>-ThanhPho-</b>!</p><p>Chúng tôi vui mừng thông báo chương trình khuyến mãi <b>-CampaignName-</b>.Hãy sử dụng mã <b>-DiscountCode-</b> để nhận ưu đãi đặc biệt.</p><p>Ưu đãi này chỉ dành riêng cho bạn tại địa chỉ email: -Email-.</p><p>Trân trọng,<br>\nĐội ngũ Marketing</p></p>",
                            ImageStorageType = "None",
                            TemplateName = "Mẫu Tin Tức Tháng 5"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.UploadBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BatchId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"), 1L, 1);

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BatchName");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UploadDate");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UploadedBy");

                    b.Property<string>("UploadedFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UploadedFileName");

                    b.HasKey("BatchId");

                    b.ToTable("UploadBatches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            BatchName = "Khách hàng đăng ký T4/2025",
                            UploadDate = new DateTime(2025, 5, 1, 9, 30, 0, 0, DateTimeKind.Utc),
                            UploadedBy = "Sales",
                            UploadedFileName = "customers_apr2025.csv"
                        },
                        new
                        {
                            BatchId = 2,
                            BatchName = "Người tham dự Workshop Marketing",
                            UploadDate = new DateTime(2025, 5, 15, 14, 0, 0, 0, DateTimeKind.Utc),
                            UploadedBy = "Events",
                            UploadedFileName = "workshop_attendees.xlsx"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailLogs", b =>
                {
                    b.HasOne("mail_marketing_api.Models.EmailRecipient", "EmailRecipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mail_marketing_api.Models.EmailTemplate", "EmailTemplate")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailRecipient");

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailRecipient", b =>
                {
                    b.HasOne("mail_marketing_api.Models.UploadBatch", "UploadBatch")
                        .WithMany("EmailRecipients")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadBatch");
                });

            modelBuilder.Entity("mail_marketing_api.Models.UploadBatch", b =>
                {
                    b.Navigation("EmailRecipients");
                });
#pragma warning restore 612, 618
        }
    }
}
