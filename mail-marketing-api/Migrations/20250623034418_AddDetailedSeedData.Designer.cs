// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mail_marketing_api.Data;

#nullable disable

namespace mail_marketing_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623034418_AddDetailedSeedData")]
    partial class AddDetailedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mail_marketing_api.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CampaignId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"), 1L, 1);

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CampaignName");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateDate");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("TemplateId");

                    b.Property<string>("UploadedFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UploadedFileName");

                    b.Property<string>("UploadedFileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UploadedFileUrl");

                    b.HasKey("CampaignId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            CampaignId = 1,
                            CampaignName = "Chiến dịch Chào Hè 2025",
                            CreateBy = "linhtq",
                            CreateDate = new DateTime(2025, 6, 5, 9, 0, 0, 0, DateTimeKind.Utc),
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TemplateId = 1,
                            UploadedFileName = "he2025.xlsx",
                            UploadedFileUrl = "/uploads/he2025.xlsx"
                        },
                        new
                        {
                            CampaignId = 2,
                            CampaignName = "Khuyến mãi VIP tháng 6",
                            CreateBy = "marketing_user",
                            CreateDate = new DateTime(2025, 6, 8, 14, 0, 0, 0, DateTimeKind.Utc),
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TemplateId = 2,
                            UploadedFileName = "vip_june.csv",
                            UploadedFileUrl = "/uploads/vip_june.csv"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailLogs", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"), 1L, 1);

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ErrorMessage");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccess");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("RecipientId");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("SentDate");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("TemplateId");

                    b.HasKey("LogId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmailLogs");

                    b.HasData(
                        new
                        {
                            LogId = 1,
                            ErrorMessage = "",
                            IsSuccess = true,
                            RecipientId = 1,
                            SentDate = new DateTime(2025, 6, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            TemplateId = 1
                        },
                        new
                        {
                            LogId = 2,
                            ErrorMessage = "SMTP connection timeout.",
                            IsSuccess = false,
                            RecipientId = 3,
                            SentDate = new DateTime(2025, 6, 13, 8, 30, 0, 0, DateTimeKind.Utc),
                            TemplateId = 2
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemplateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HtmlContent");

                    b.Property<string>("ImageStorageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImageStorageType");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TemplateName");

                    b.HasKey("TemplateId");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            TemplateId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2025, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            HtmlContent = "<h1>Xin chào -TenNguoiNhan-!</h1><p>Chúng tôi rất vui khi có bạn đồng hành.</p>",
                            ImageStorageType = "None",
                            TemplateName = "Chào mừng thành viên mới"
                        },
                        new
                        {
                            TemplateId = 2,
                            CreatedBy = "MarketingTeam",
                            CreatedDate = new DateTime(2025, 6, 2, 10, 30, 0, 0, DateTimeKind.Utc),
                            HtmlContent = "<p>Thân gửi -TenNguoiNhan-,</p><p>Mời bạn tham gia chương trình -CampaignName- và nhận ưu đãi tại -Email-.</p>",
                            ImageStorageType = "None",
                            TemplateName = "Thông báo khuyến mãi đặc biệt"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.Recipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientId"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int")
                        .HasColumnName("CampaignId");

                    b.Property<string>("CustomDataJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CustomDataJson");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RecipientEmail");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RecipientName");

                    b.HasKey("RecipientId");

                    b.HasIndex("CampaignId");

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            RecipientId = 1,
                            CampaignId = 1,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Văn A\", \"ThanhPho\": \"Hà Nội\" }",
                            RecipientEmail = "levana@example.com",
                            RecipientName = "Lê Văn A"
                        },
                        new
                        {
                            RecipientId = 2,
                            CampaignId = 1,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Thị B\", \"ThanhPho\": \"Đà Nẵng\" }",
                            RecipientEmail = "nguyenthib@example.com",
                            RecipientName = "Nguyễn Thị B"
                        },
                        new
                        {
                            RecipientId = 3,
                            CampaignId = 2,
                            CustomDataJson = "{ \"TenNguoiNhan\": \"Văn C\", \"MembershipLevel\": \"Gold\", \"Email\": \"phamvanc@example.com\" }",
                            RecipientEmail = "phamvanc@example.com",
                            RecipientName = "Phạm Văn C"
                        });
                });

            modelBuilder.Entity("mail_marketing_api.Models.Campaign", b =>
                {
                    b.HasOne("mail_marketing_api.Models.EmailTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("mail_marketing_api.Models.EmailLogs", b =>
                {
                    b.HasOne("mail_marketing_api.Models.Recipient", "EmailRecipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mail_marketing_api.Models.EmailTemplate", "EmailTemplate")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmailRecipient");

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("mail_marketing_api.Models.Recipient", b =>
                {
                    b.HasOne("mail_marketing_api.Models.Campaign", "Campaign")
                        .WithMany("Recipients")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("mail_marketing_api.Models.Campaign", b =>
                {
                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
